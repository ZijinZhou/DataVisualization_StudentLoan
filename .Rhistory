legend.position = "right",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("10.Debt Struggles makes food at home")
ggplotly(age_edu)%>%
layout(legend = list(x = 0.5, y = 1))
ggplotly(loan, tooltip = c("loan","amount"))
ggplot(scf_marital,aes(x = KIDS))+
geom_point(aes(y = edu_loan, group = MARRIED,
color = MARRIED, size = n), alpha = 0.8)+
geom_smooth(aes(y = edu_loan, group = MARRIED, color = MARRIED),
method = 'loess',se = FALSE)+
scale_x_continuous(name = "Number of Kids",
breaks = seq(0,7, by = 1))+
scale_y_continuous(name = "Average Student Loan",
breaks = seq(0,12500, by = 2500))+
scale_colour_manual(name = "Marital Status",
values=c("#FFCC66", "#CC6600"))+
scale_size(name = "Number of Observations",
range = c(4,12))+
theme_minimal()+
theme(legend.text = element_text(size = 10, color = "gray10"),
legend.position = "right",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("4.Get married and kids, get stable and broke")
ggplot(scf_loan)+
geom_col(aes(x = YEAR, y = amount, fill = loan),position = "fill", width = 1)+
scale_x_continuous(name = "Survey Year",
limits = c(1986, 2019),
breaks = seq(1989, 2016, by = 3),
expand = c(0, 0)) +
scale_y_continuous(name = "proportion")+
coord_flip()+
scale_fill_manual(values = c("#FFCC66","#FF9900","#CC6600","#CC6633","#993300","#330000")) +
theme_minimal()+
guides(fill = guide_legend(nrow = 1)) +
theme(legend.title = element_blank(),
legend.justification = 0.05,
legend.position = "top",
legend.text = element_text(size = 10, color = "gray10"),
legend.key.height=unit(1,"line"),
legend.key.width=unit(1,"line"),
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("2.Proportion of Loans")
ggplot(scf_marital,aes(x = KIDS))+
geom_bar(aes(y = edu_loan, group = MARRIED, fill = MARRIED),
size  = 4, width = 0.5, stat = "identity", alpha =0.7,
position=position_dodge())+
geom_smooth(aes(y = edu_loan, group = MARRIED, color = MARRIED),
method = 'loess',se = FALSE)+
geom_text(aes(label=round(edu_loan),
y=edu_loan, group = MARRIED),
colour="grey10", size = 3, vjust = -1,
position = position_dodge(0.9))+
scale_x_continuous(name = "Number of Kids",
breaks = seq(0,7, by = 1))+
scale_y_continuous(name = "Average Student Loan",
limits = c(0,14000),
breaks = seq(0,15000, by = 2500))+
scale_colour_manual(name = "average edu loan",
values=c("#CC6666","#990033"))+
scale_fill_manual(name = "average edu loan",
values=c("#FFCC66", "#CC6600"))+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "top",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("5.Get married and kids, get stable and broke")
ggplot(scf_age, aes(x = AGE,y = edu_loan))+
geom_point(aes(color = edu),shape = 1,size = 2,stroke = 1.5)+
geom_smooth(color = "#990000", method = "loess", se = FALSE)+
scale_x_continuous(name = "Age of Household",
breaks = seq(18,96,by=6))+
scale_y_continuous(name = "Average Student Loan",
breaks = seq(0,50000,by = 10000))+
scale_color_manual(values = c("#FFCC66","#FF9900","#CC6600","#660000"))+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "top",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("6.Young, Smart but Poor")
ggplot(scf_money2)+
geom_bar(aes(x = percentile, y = edu_loan, group = key, fill = key),
stat = "identity", width = 10)+
facet_wrap(~ key)+ #make it into two seperate charts
geom_text(aes(label=round(edu_loan), x = percentile, y=edu_loan,
group = key), colour="grey10", size = 3, vjust = -1)+
scale_x_continuous(name = "percentile",
limits = c(0,100),
breaks = seq(0,100,by=20))+
scale_y_continuous(name = "Average Student Loan",
limits = c(0,18000))+
scale_fill_manual(name = "category",
values=c("#FFCC66", "#CC6600"))+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "right",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("7.Wealth and Income Distribution")
ggplot(scf_broke,aes(x = YEAR, y = broke*100, group = LOAN, color = LOAN))+
geom_line(size = 1)+
geom_point(size = 3)+
geom_hline(yintercept = c(5.12,2.85),
lty=2,color = c("#FFCC66", "#CC6600"))+
#add the average line to the chart
geom_text(aes(label=round(broke*100,2), x = YEAR, y=broke*100,
group = LOAN), colour="grey10", size = 3, vjust = -1)+
scale_x_continuous(name = "Survey Year",
limits = c(1995, 2019),
breaks = seq(1995, 2019, by = 3),
expand = c(0, 0))+
scale_y_continuous(name = "The proportion of bankruptcy",
limits = c(2,6),
breaks = seq(2,6,by=1))+
scale_color_manual(name = "student loan",
values=c("#FFCC66", "#CC6600"))+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "top",
plot.title = element_text(face = "bold", color = "black", size = 20))+
annotate("text", x = c(2019,2019), y = c(5.12,2.85), adj=1,
label = c("5.12%", "2.85%"),color=c("#FFCC66", "#CC6600"))+
ggtitle("8. Student Loan leads to a higher Bankruptcy")
ggplot(scf_food, aes(x="", y=value, fill=key))+
geom_bar(width = 1, stat = "identity",position = "fill")+
facet_wrap(~ broke)+
coord_polar("y", start=0)+
scale_fill_manual(values=c("#CC6600","#660000","#FFCC66"))+
theme_minimal()+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "right",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("9.Debt Struggles makes food at home")
ggplot(scf_food_cum,aes(x = broke))+
geom_bar(aes(y = value, group = order, fill = key),
stat = "identity", width = 0.5)+
geom_text(aes(label = round(value), y = ypos, group = order),
size = 3, color = "grey10", vjust = -1)+
scale_y_continuous(name = "Expenses on Food",
limits = c(0,9000),
breaks = seq(0,9000, by = 2000))+
xlab("Broke Status")+
scale_fill_manual(values=c("#CC6600","#660000","#FFCC66"))+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "right",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("10.Debt Struggles makes food at home")
library(ggplot2)
library(grid)
library(dplyr)
library(tidyr)
library(htmlwidgets)
library(plotly)
library(purrr)
library(stringr)
library(DT)
scf <- read.table("survey_SCF.txt", sep = ",", header = TRUE)
scf_debt <- scf %>%
select(CASEID,YEAR,DEBT,ASSET,EDN_INST, LEVRATIO, DEBT2INC) %>%
group_by(YEAR) %>%
summarise(debt_income = mean(DEBT2INC),
debt_asset= mean(LEVRATIO),
average_debt = mean(DEBT)) %>%
mutate(average_debt = average_debt/1000)#make it by 1000 dollars
ggplot(scf_debt)+
geom_bar(aes(x=YEAR, y= average_debt, fill="average debt"),
stat="identity", width = 1)+
geom_line(aes(x=YEAR, y=debt_asset*200,
color = "debt/asset"),
group = 1, size = 1.2)+
geom_text(aes(label=round(debt_asset,2),
x=YEAR,y=debt_asset*200),
colour="grey10", size = 3, vjust = 2)+
geom_text(aes(label=round(average_debt),
x=YEAR, y=average_debt),
colour="grey10", size = 3, vjust = -1)+
scale_x_continuous(name = "Survey Year",
limits = c(1986, 2019),
breaks = seq(1989, 2016, by = 3),
expand = c(0, 0)) +
scale_y_continuous(name = "Average Debt \nby 1,000 dollars",
limits = c(0,400),
sec.axis = sec_axis(~./200, name = "debt/asset \n[%]")) +
scale_colour_manual(" ", values=c("debt/asset" = "#CC6600"))+
#add a second y-axis for the ratio
scale_fill_manual("",values="#FFCC66")+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "top",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("1.Debt over time")
scf_loan <- scf %>%
select(CASEID, YEAR, DEBT, EDN_INST, NH_MORT, OTHLOC, CCBAL, INSTALL, VEH_INST) %>%
group_by(YEAR) %>%
summarise(education = round(mean(EDN_INST),2),
mortgage = round(mean(NH_MORT),2),
other = round(mean(OTHLOC),2),
`credit card` = round(mean(CCBAL),2),
installment = round(mean(INSTALL),2),
vehicle = round(mean(VEH_INST),2))%>%
gather(key = "loan", value = "amount", education, mortgage,other,`credit card`,installment,vehicle) %>%
split(.$YEAR)%>%
map(~mutate(.,prop = round(.$amount/sum(.$amount),2)))%>%
#calculate the proportion by year
bind_rows()
scf_loan$loan <- factor(scf_loan$loan,
levels = c("mortgage","installment",
"vehicle","credit card",
"other","education"))
#education should be the last level in order to make the changes of proportion clear
loan <- ggplot(scf_loan)+
geom_col(aes(x = YEAR, y = amount, fill = loan),position = "fill", width = 1)+
scale_x_continuous(name = "Survey Year",
limits = c(1986, 2019),
breaks = seq(1989, 2016, by = 3),
expand = c(0, 0)) +
scale_y_continuous(name = "proportion")+
coord_flip()+
scale_fill_manual(values = c("#FFCC66","#FF9900","#CC6600","#CC6633","#993300","#330000")) +
theme_minimal()+
guides(fill = guide_legend(nrow = 1)) +
theme(legend.title = element_blank(),
legend.justification = 0.05,
legend.position = "top",
legend.text = element_text(size = 10, color = "gray10"),
legend.key.height=unit(1,"line"),
legend.key.width=unit(1,"line"),
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("2.Proportion of Loans")
loan
scf_edu <- scf %>%
select(CASEID,YEAR,DEBT,ASSET,EDN_INST) %>%
filter(DEBT != 0) %>%
mutate(edu_ratio = EDN_INST/DEBT) %>%
group_by(YEAR) %>%
summarise(average_edu_ratio = mean(edu_ratio),average_edu = mean(EDN_INST))
ggplot(scf_edu) +
geom_bar(aes(x=YEAR, y= average_edu, fill="edu"),
stat="identity", width = 1)+
geom_line(aes(x=YEAR, y=average_edu_ratio*100000,
color = "ratio"),
group = 1, size = 1.2)+
geom_text(aes(label=round(average_edu_ratio*100,2),
x=YEAR,y=average_edu_ratio*100000),
colour="grey10", size = 3, vjust = -1)+
geom_text(aes(label=round(average_edu),
x=YEAR, y=average_edu),
colour="grey10", size = 3, vjust = -1)+
scale_x_continuous(name = "Survey Year",
limits = c(1986, 2019),
breaks = seq(1989, 2016, by = 3),
expand = c(0, 0)) +
scale_y_continuous(name = "Average Education Loan",
limits = c(0,15000),
sec.axis = sec_axis(~./1000,name = "education loan/debt \n[%]"))+
scale_colour_manual(" ", values=c("ratio" = "#CC6600"))+
scale_fill_manual("",values="#FFCC66")+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "top",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("Education Loan over time")
scf_2016 <- scf %>%
filter(YEAR == 2016)%>%
select(CASEID,YEAR,DEBT,ASSET,EDN_INST, EDCL, AGE, FAMSTRUCT, MARRIED,KIDS,EDUC,HHSEX,RACE)
scf_2016$MARRIED <- factor(scf_2016$MARRIED,
levels = c("1","2"),
labels = c("Married/Living with partner",
"Neither married nor living with partner"))
scf_marital <- scf_2016 %>%
group_by(MARRIED, KIDS) %>%
summarise(edu_loan = mean(EDN_INST), n = n())
#n for the number of respondents in this category
#check the mean and standard deviation of student loan in different marital status
scf_marital %>%
group_by(MARRIED)%>%
summarise(mean = mean(edu_loan), sd = sd(edu_loan))
ggplot(scf_marital,aes(x = KIDS))+
geom_point(aes(y = edu_loan, group = MARRIED,
color = MARRIED, size = n), alpha = 0.8)+
geom_smooth(aes(y = edu_loan, group = MARRIED, color = MARRIED),
method = 'loess',se = FALSE)+
scale_x_continuous(name = "Number of Kids",
breaks = seq(0,7, by = 1))+
scale_y_continuous(name = "Average Student Loan",
breaks = seq(0,12500, by = 2500))+
scale_colour_manual(name = "Marital Status",
values=c("#FFCC66", "#CC6600"))+
scale_size(name = "Number of Observations",
range = c(4,12))+
theme_minimal()+
theme(legend.text = element_text(size = 10, color = "gray10"),
legend.position = "right",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("4.Get married and kids, get stable and broke")
ggplot(scf_marital,aes(x = KIDS))+
geom_bar(aes(y = edu_loan, group = MARRIED, fill = MARRIED),
size  = 4, width = 0.5, stat = "identity", alpha =0.7,
position=position_dodge())+
geom_smooth(aes(y = edu_loan, group = MARRIED, color = MARRIED),
method = 'loess',se = FALSE)+
geom_text(aes(label=round(edu_loan),
y=edu_loan, group = MARRIED),
colour="grey10", size = 3, vjust = -1,
position = position_dodge(0.9))+
scale_x_continuous(name = "Number of Kids",
breaks = seq(0,7, by = 1))+
scale_y_continuous(name = "Average Student Loan",
limits = c(0,14000),
breaks = seq(0,15000, by = 2500))+
scale_colour_manual(name = "average edu loan",
values=c("#CC6666","#990033"))+
scale_fill_manual(name = "average edu loan",
values=c("#FFCC66", "#CC6600"))+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "top",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("5.Get married and kids, get stable and broke")
scf_age <- scf_2016 %>%
group_by(AGE, EDCL)%>%
summarise(edu_loan = round(mean(EDN_INST),2),n())
scf_age$edu <- factor(scf_age$EDCL,
levels = c("1","2","3","4"),
labels = c("No high school diploma/GED",
"High school diploma/GED",
"Some college","College degree"))
age_edu <- ggplot(scf_age, aes(x = AGE,y = edu_loan))+
geom_point(aes(color = edu),shape = 1,size = 2,stroke = 1.5)+
geom_smooth(color = "#990000", method = "loess", se = FALSE)+
scale_x_continuous(name = "Age of Household",
breaks = seq(18,96,by=6))+
scale_y_continuous(name = "Average Student Loan",
breaks = seq(0,50000,by = 10000))+
scale_color_manual(values = c("#FFCC66","#FF9900","#CC6600","#660000"))+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "top",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("6.Young, Smart but Poor")
age_edu
scf_money <- scf %>%
filter(YEAR == 2016)%>%
select(CASEID,YEAR,DEBT,ASSET,EDN_INST, INCOME, INCCAT, NETWORTH, NWCAT)
#make networth and income have the same number of categories and convert it into percentile scale.
scf_money$NWCAT <- scf_money$NWCAT*20-10
scf_money$INCCAT[scf_money$INCCAT == 6] <- 5
scf_money$INCCAT <- scf_money$INCCAT*20-10
#networth percentile and student loan
scf_nw <- scf_money %>%
group_by(NWCAT) %>%
summarise(networth = median(NETWORTH), edu_loan = mean(EDN_INST))%>%
mutate(percentile = NWCAT) %>%
select(percentile,networth,edu_loan)%>%
gather(key = "key",value = "value",networth)%>%
select(percentile,key,edu_loan)
#income percentile and student loan
scf_inc <- scf_money %>%
group_by(INCCAT) %>%
summarise(income = median(INCOME), edu_loan = mean(EDN_INST))%>%
mutate(percentile = INCCAT)%>%
select(percentile,income,edu_loan)%>%
gather(key = "key",value = "value",income)%>%
select(percentile,key,edu_loan)
#combine
scf_money2 <- rbind(scf_nw,scf_inc)
ggplot(scf_money2)+
geom_bar(aes(x = percentile, y = edu_loan, group = key, fill = key),
stat = "identity", width = 10)+
facet_wrap(~ key)+ #make it into two seperate charts
geom_text(aes(label=round(edu_loan), x = percentile, y=edu_loan,
group = key), colour="grey10", size = 3, vjust = -1)+
scale_x_continuous(name = "percentile",
limits = c(0,100),
breaks = seq(0,100,by=20))+
scale_y_continuous(name = "Average Student Loan",
limits = c(0,18000))+
scale_fill_manual(name = "category",
values=c("#FFCC66", "#CC6600"))+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "right",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("7.Wealth and Income Distribution")
scf_broke <- scf %>%
filter(YEAR >= 1998) %>%
select(YEAR,EDN_INST, BNKRUPLAST5)
#divide into two categories: with and without student loan
scf_broke$LOAN <- ifelse(scf_broke$EDN_INST != 0, "had loan", "no loan")
scf_broke$BNKRUPLAST5 <- factor(scf_broke$BNKRUPLAST5,
levels = c("1","0"),
labels = c("has",
"no"))
#count the number of each categories
scf_broke <- scf_broke %>%
group_by(YEAR, BNKRUPLAST5, LOAN)%>%
summarise(n=n()) %>%
spread(BNKRUPLAST5,n)
scf_broke[is.na(scf_broke)] <- 0
#the proportion of bankruptcy
scf_broke <- scf_broke %>%
mutate(broke = has/(no+has))
#the average proportion of bankruptcy with and without loan
scf_broke %>%
group_by(LOAN)%>%
summarise(mean(broke))
ggplot(scf_broke,aes(x = YEAR, y = broke*100, group = LOAN, color = LOAN))+
geom_line(size = 1)+
geom_point(size = 3)+
geom_hline(yintercept = c(5.12,2.85),
lty=2,color = c("#FFCC66", "#CC6600"))+
#add the average line to the chart
geom_text(aes(label=round(broke*100,2), x = YEAR, y=broke*100,
group = LOAN), colour="grey10", size = 3, vjust = -1)+
scale_x_continuous(name = "Survey Year",
limits = c(1995, 2019),
breaks = seq(1995, 2019, by = 3),
expand = c(0, 0))+
scale_y_continuous(name = "The proportion of bankruptcy",
limits = c(2,6),
breaks = seq(2,6,by=1))+
scale_color_manual(name = "student loan",
values=c("#FFCC66", "#CC6600"))+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "top",
plot.title = element_text(face = "bold", color = "black", size = 20))+
annotate("text", x = c(2019,2019), y = c(5.12,2.85), adj=1,
label = c("5.12%", "2.85%"),color=c("#FFCC66", "#CC6600"))+
ggtitle("8. Student Loan leads to a higher Bankruptcy")
scf_food1 <- scf %>% #bankruptcy and food expense
select(BNKRUPLAST5,FOODDELV, FOODHOME, FOODAWAY) %>%
group_by(BNKRUPLAST5) %>%
summarise(delivery = mean(FOODDELV), home = mean(FOODHOME), away = mean(FOODAWAY)) %>%
gather(key = "key", value = "value", delivery, away, home)%>%
mutate(order = c(3,3,2,2,1,1)) #order for the plot
scf_food1$broke <- factor(scf_food1$BNKRUPLAST5,
levels = c("1","0"),
labels = c("has bankruptcy",
"no bankruptcy"))
scf_food2 <- scf %>% #foreclose and food expense
select(FORECLLAST5,FOODDELV, FOODHOME, FOODAWAY) %>%
group_by(FORECLLAST5) %>%
summarise(delivery = mean(FOODDELV), home = mean(FOODHOME), away = mean(FOODAWAY)) %>%
gather(key = "key", value = "value", delivery, away, home)%>%
mutate(order = c(3,3,2,2,1,1))
scf_food2$broke <- factor(scf_food2$FORECLLAST5,
levels = c("1","0"),
labels = c("has foreclose",
"no foreclose"))
scf_food <- rbind(scf_food1[,2:5], scf_food2[,2:5])
ggplot(scf_food, aes(x="", y=value, fill=key))+
geom_bar(width = 1, stat = "identity",position = "fill")+
facet_wrap(~ broke)+
coord_polar("y", start=0)+
scale_fill_manual(values=c("#CC6600","#660000","#FFCC66"))+
theme_minimal()+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid  = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "right",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("9.Debt Struggles makes food at home")
#calculate the cumsum for the geom_text
scf_food_cum <- plyr::ddply(scf_food, "broke",
transform, ypos=cumsum(value))
ggplot(scf_food_cum,aes(x = broke))+
geom_bar(aes(y = value, group = order, fill = key),
stat = "identity", width = 0.5)+
geom_text(aes(label = round(value), y = ypos, group = order),
size = 3, color = "grey10", vjust = -1)+
scale_y_continuous(name = "Expenses on Food",
limits = c(0,9000),
breaks = seq(0,9000, by = 2000))+
xlab("Broke Status")+
scale_fill_manual(values=c("#CC6600","#660000","#FFCC66"))+
theme_minimal()+
theme(legend.title = element_blank(),
legend.text = element_text(size = 10, color = "gray10"),
legend.position = "right",
plot.title = element_text(face = "bold", color = "black", size = 20))+
ggtitle("10.Debt Struggles makes food at home")
ggplotly(age_edu)%>%
layout(legend = list(x = 0.5, y = 1))
ggplotly(loan, tooltip = c("loan","amount"))
pretty_headers <-
gsub("[.]", " ", colnames(scf_loan)) %>%
str_to_title()
scf_loan %>%
datatable(
rownames = FALSE,
colnames = pretty_headers,
filter = list(position = "top"),
options = list(language = list(sSearch = "Filter:"))
)
